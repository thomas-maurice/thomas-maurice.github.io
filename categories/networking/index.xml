<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" 
  xmlns:content="http://purl.org/rss/1.0/modules/content/" 
  xmlns:dc="http://purl.org/dc/elements/1.1/" 
  xmlns:atom="http://www.w3.org/2005/Atom" 
  xmlns:sy="http://purl.org/rss/1.0/modules/syndication/" 
  xmlns:media="http://search.yahoo.com/mrss/">
  <channel>
    <title>networking on /var/log/tmaurice</title>
    <link>https://blog.thomas.maurice.fr/categories/networking/</link>
    <description>Recent content in networking on /var/log/tmaurice</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <managingEditor>thomas@maurice.fr (Thomas)</managingEditor>
    <webMaster>thomas@maurice.fr (Thomas)</webMaster>
    <copyright>Â©2021, All Rights Reserved</copyright>
    <lastBuildDate>Fri, 24 Sep 2021 13:52:19 +0000</lastBuildDate>
    
        <atom:link href="https://blog.thomas.maurice.fr/categories/networking/index.xml" rel="self" type="application/rss+xml" />
    

      
      <item>
        <title>Virtualise OpenWRT in virt-manager/KVM</title>
        <link>https://blog.thomas.maurice.fr/posts/virtualise-openwrt/</link>
        <pubDate>Fri, 24 Sep 2021 13:52:19 +0000</pubDate>
        <author>thomas@maurice.fr (Thomas)</author>
        <atom:modified>Fri, 24 Sep 2021 13:52:19 +0000</atom:modified>
        <guid>https://blog.thomas.maurice.fr/posts/virtualise-openwrt/</guid>
        <description>Introduction If you are anything like me you probably like to tinker a bit with your home network. I discovered OpenWRT a few years ago and ever since my Turris Omnia router almost never failed me. I since acquired a bunch of small ARM boards capable of running my network that rely on OpwnWRT. The thing is, I am the furthest away I would be from a legit network engineer, and it has happened a few times that I would completely fuck over my network because I did something wrong without actually realising it.</description>
        
        <dc:creator>Thomas</dc:creator>
        <media:content url="https://blog.thomas.maurice.frimages/logos/openwrt.png" medium="image"><media:title type="html">featured image</media:title></media:content>
        
        
        
          
            
              <category>networking</category>
            
          
            
              <category>security</category>
            
          
            
              <category>openwrt</category>
            
          
            
              <category>virtualisation</category>
            
          
        
        
          
            
              <category>networking</category>
            
          
            
              <category>security</category>
            
          
            
              <category>openwrt</category>
            
          
            
              <category>virtualisation</category>
            
          
        
        
      </item>
      
      <item>
        <title>Some VXLAN stuff so I don&#39;t forget how it works</title>
        <link>https://blog.thomas.maurice.fr/posts/some-vxlan-stuff-so-i-dont-forget/</link>
        <pubDate>Sat, 07 Aug 2021 13:06:36 +0100</pubDate>
        <author>thomas@maurice.fr (Thomas)</author>
        <atom:modified>Sat, 07 Aug 2021 13:06:36 +0100</atom:modified>
        <guid>https://blog.thomas.maurice.fr/posts/some-vxlan-stuff-so-i-dont-forget/</guid>
        <description>Just like my network namespace post, this post is going to be a basic cheat sheet for me so I don&amp;rsquo;t have to endlessly Google stuff for ages in case I need to use VXLANs again.
What is a VXLAN Thta&amp;rsquo;s just a like a VLAN, essentially an overlay network that is not limited to 4000 IDs. It also has some nice features such as auto discovery of peers via broadcast on the same network.</description>
        
        <dc:creator>Thomas</dc:creator>
        <media:content url="https://blog.thomas.maurice.frimages/random/box-of-cables.jpg" medium="image"><media:title type="html">featured image</media:title></media:content>
        
        
        
          
            
              <category>linux</category>
            
          
            
              <category>networking</category>
            
          
            
              <category>kernel</category>
            
          
            
              <category>namespaces</category>
            
          
            
              <category>vxlan</category>
            
          
        
        
          
            
              <category>linux</category>
            
          
            
              <category>networking</category>
            
          
            
              <category>kernel</category>
            
          
            
              <category>namespaces</category>
            
          
            
              <category>vxlan</category>
            
          
        
        
      </item>
      
      <item>
        <title>Network namespaces in Linux</title>
        <link>https://blog.thomas.maurice.fr/posts/network-namespaces-in-linux/</link>
        <pubDate>Sat, 29 Aug 2020 11:02:50 +0000</pubDate>
        <author>thomas@maurice.fr (Thomas)</author>
        <atom:modified>Sat, 29 Aug 2020 11:02:50 +0000</atom:modified>
        <guid>https://blog.thomas.maurice.fr/posts/network-namespaces-in-linux/</guid>
        <description>This post is a cheatsheet for myself in case I need to fuck around with network namespaces again.
NB: most of the commands should be ran as root.
Create a new netns 1 2 3 4  $ ip netns add testns # Check it works $ ip netns ls testns   Exec a command inside a netns 1 2 3  $ ip netns exec testns ip link show 1: lo: &amp;lt;LOOPBACK&amp;gt; mtu 65536 qdisc noop state DOWN mode DEFAULT group default qlen 1000 link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00   Connect the namespace from the outside Choose what we want to make as a network setup We want the following:</description>
        
        <dc:creator>Thomas</dc:creator>
        <media:content url="https://blog.thomas.maurice.frimages/logos/tux_small.png" medium="image"><media:title type="html">featured image</media:title></media:content>
        
        
        
          
            
              <category>linux</category>
            
          
            
              <category>networking</category>
            
          
            
              <category>kernel</category>
            
          
            
              <category>namespaces</category>
            
          
        
        
          
            
              <category>linux</category>
            
          
            
              <category>networking</category>
            
          
            
              <category>kernel</category>
            
          
            
              <category>namespaces</category>
            
          
        
        
      </item>
      
      <item>
        <title>Make Your Own Travel Router With A NanoPi And Armbian</title>
        <link>https://blog.thomas.maurice.fr/posts/make-your-own-travel-router/</link>
        <pubDate>Wed, 29 Jan 2020 19:40:22 +0000</pubDate>
        <author>thomas@maurice.fr (Thomas)</author>
        <atom:modified>Wed, 29 Jan 2020 19:40:22 +0000</atom:modified>
        <guid>https://blog.thomas.maurice.fr/posts/make-your-own-travel-router/</guid>
        <description>When you travel, you may sometimes want to be able to access some resources that are present on your flat&amp;rsquo;s network, make your traffic go through a VPN or what not because you don&amp;rsquo;t trust the network you are in (wether it is a hotel/coffee shop or what not). This blogpost is going to explain how you can build a nice travel router for when you travel around, so no one steals your nudes or snoops on the sketchy p0rn you watch.</description>
        
        <dc:creator>Thomas</dc:creator>
        <media:content url="https://blog.thomas.maurice.frimages/logos/armbian.png" medium="image"><media:title type="html">featured image</media:title></media:content>
        
        
        
          
            
              <category>security</category>
            
          
            
              <category>networking</category>
            
          
            
              <category>router</category>
            
          
            
              <category>wireguard</category>
            
          
            
              <category>debian</category>
            
          
            
              <category>linux</category>
            
          
        
        
          
            
              <category>security</category>
            
          
            
              <category>debian</category>
            
          
            
              <category>networking</category>
            
          
            
              <category>linux</category>
            
          
        
        
      </item>
      

    
  </channel>
</rss>
